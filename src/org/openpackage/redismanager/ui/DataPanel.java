/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.openpackage.redismanager.ui;

import java.awt.CardLayout;
import java.awt.event.KeyEvent;
import javax.swing.DefaultComboBoxModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;
import org.openpackage.redismanager.RedisKey;
import org.openpackage.redismanager.RedisKeys;

/**
 *
 * @author micfans
 */
public class DataPanel extends javax.swing.JPanel {

    private static final String KEY_FILTER_EMPTY_TEXT = "Enter char to filter";

    private final DataController controller = new DataController();

    private final RedisKeys rks;

    private RedisKey currentRedisKey;

    /**
     * Creates new form DataPanel
     *
     * @param rks
     */
    public DataPanel(RedisKeys rks) {
        this.rks = rks;
        initComponents();
        initTree("*");
        initValueTypes();
    }

    public RedisKeys getRedisKeys() {
        return rks;
    }

    private void initTree(String filter) {
        DefaultTreeModel model = controller.loadKeys(rks, filter);
        keysTree.setModel(model);
        keysTree.expandRow(0);
        model.reload();
        if (model.isLeaf(model.getRoot())) {
            valuePanel.setVisible(false);
            emptyPanel.setVisible(true);
        }
    }

    private void initValueTypes() {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        model.addElement(RedisKey.VALUE_STRING);
        model.addElement(RedisKey.VALUE_JSON);
        valueTypeComboBox.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        keysTree = new javax.swing.JTree();
        jPanel9 = new javax.swing.JPanel();
        keyFilterTextField = new javax.swing.JTextField();
        cardPanel = new javax.swing.JPanel();
        emptyPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        valuePanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        valueTypeComboBox = new javax.swing.JComboBox<>();
        allowEditCheckBox = new javax.swing.JCheckBox();
        nameTextField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        valueTextPane = new javax.swing.JTextPane();
        jPanel5 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        reloadButton = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        jSplitPane1.setBorder(null);
        jSplitPane1.setDividerLocation(150);
        jSplitPane1.setDividerSize(3);

        jPanel8.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setBorder(null);

        keysTree.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        keysTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                keysTreeValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(keysTree);

        jPanel8.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel9.setLayout(new java.awt.BorderLayout());

        keyFilterTextField.setText(KEY_FILTER_EMPTY_TEXT);
        keyFilterTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                keyFilterTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                keyFilterTextFieldFocusLost(evt);
            }
        });
        keyFilterTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                keyFilterTextFieldKeyPressed(evt);
            }
        });
        jPanel9.add(keyFilterTextField, java.awt.BorderLayout.CENTER);

        jPanel8.add(jPanel9, java.awt.BorderLayout.PAGE_START);

        jSplitPane1.setLeftComponent(jPanel8);

        cardPanel.setLayout(new java.awt.CardLayout());

        emptyPanel.setBackground(new java.awt.Color(204, 204, 204));
        emptyPanel.setLayout(new java.awt.BorderLayout());

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Select key to display.");
        emptyPanel.add(jLabel3, java.awt.BorderLayout.CENTER);

        cardPanel.add(emptyPanel, "card2");

        valuePanel.setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.BorderLayout());

        jLabel1.setText("Name:");
        jPanel6.add(jLabel1);

        jPanel2.add(jPanel6, java.awt.BorderLayout.LINE_START);

        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel2.setText("View value as:");
        jPanel7.add(jLabel2);

        valueTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel7.add(valueTypeComboBox);

        allowEditCheckBox.setText("Allow Edit");
        allowEditCheckBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                allowEditCheckBoxStateChanged(evt);
            }
        });
        jPanel7.add(allowEditCheckBox);

        jPanel3.add(jPanel7, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel3, java.awt.BorderLayout.SOUTH);

        nameTextField.setEditable(false);
        nameTextField.setPreferredSize(new java.awt.Dimension(200, 26));
        jPanel2.add(nameTextField, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel2, java.awt.BorderLayout.SOUTH);

        valuePanel.add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jScrollPane2.setBorder(null);

        valueTextPane.setEditable(false);
        valueTextPane.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        jScrollPane2.setViewportView(valueTextPane);

        valuePanel.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.TRAILING));

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        jPanel4.add(saveButton);

        reloadButton.setText("Reload");
        reloadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reloadButtonActionPerformed(evt);
            }
        });
        jPanel4.add(reloadButton);

        jPanel5.add(jPanel4);

        valuePanel.add(jPanel5, java.awt.BorderLayout.PAGE_END);

        cardPanel.add(valuePanel, "card3");

        jSplitPane1.setRightComponent(cardPanel);

        add(jSplitPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void keysTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_keysTreeValueChanged
        TreePath path = evt.getPath();
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) (path.getLastPathComponent());
        if (!node.isRoot()) {
            emptyPanel.setVisible(false);
            valuePanel.setVisible(true);
            currentRedisKey = (RedisKey) node.getUserObject();
            reloadButtonActionPerformed(null);
        }
    }//GEN-LAST:event_keysTreeValueChanged

    private void reloadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reloadButtonActionPerformed
        currentRedisKey.loadValue();
        nameTextField.setText(currentRedisKey.getName());
        valueTextPane.setText(currentRedisKey.getValue());
    }//GEN-LAST:event_reloadButtonActionPerformed

    private void allowEditCheckBoxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_allowEditCheckBoxStateChanged
        nameTextField.setEditable(allowEditCheckBox.isSelected());
        valueTextPane.setEditable(allowEditCheckBox.isSelected());
    }//GEN-LAST:event_allowEditCheckBoxStateChanged

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed

    }//GEN-LAST:event_saveButtonActionPerformed

    private void keyFilterTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_keyFilterTextFieldFocusGained
        if (keyFilterTextField.getText().startsWith(KEY_FILTER_EMPTY_TEXT)) {
            keyFilterTextField.setText("");
        }
    }//GEN-LAST:event_keyFilterTextFieldFocusGained

    private void keyFilterTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_keyFilterTextFieldFocusLost
        String t = keyFilterTextField.getText();
        if (t.equals("")) {
            keyFilterTextField.setText(KEY_FILTER_EMPTY_TEXT);
            t = "*";
        }
        initTree(t);
    }//GEN-LAST:event_keyFilterTextFieldFocusLost

    private void keyFilterTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_keyFilterTextFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            keysTree.grabFocus();
        }
    }//GEN-LAST:event_keyFilterTextFieldKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox allowEditCheckBox;
    private javax.swing.JPanel cardPanel;
    private javax.swing.JPanel emptyPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTextField keyFilterTextField;
    private javax.swing.JTree keysTree;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JButton reloadButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JPanel valuePanel;
    private javax.swing.JTextPane valueTextPane;
    private javax.swing.JComboBox<String> valueTypeComboBox;
    // End of variables declaration//GEN-END:variables
}
